-- 프로젝트 최조 깃허브에 올리기(팀장) --

1. dev 폴더에 프로젝트 생성

2. Git hub에 프로젝트를 공유할 원격 저장소 생성
	원격 저장소의 이름은 프로젝트명과 동일하게 작성하는걸 권장※

3. intellij로 프로젝트 실행 => 기본적인 세팅 할 것.
	file setting, application.properties, build.gradle, react프로젝트 생성 및 필요 기능 install

4. 세팅된 프로젝트를 Git hub에 올리기
 4-1) git init
 4-2) git branch -M main
 4-3) git remote add origin 원격자장소 url
 4-4) git config --global core.autocrlf true (최초 1회 실행, LF오류 발생시)
 4-7) git add .
 4-7) git commit -m 커밋메세지
 4-7) git push origin main

5. 원격저장소에 팀원들 초대


-- 팀장이 올린 프로젝트 최초 내려받기(팀원, 집에서 사용할 때) --

1. 프로젝트 받을 디렉토리에서 Git bash

2. 프로젝트 내려받기
	git clone 팀장의 원격저장소 url

-- Git hub 연동 후 작업 순서 -- 

1. 본인이 작업할 새로운 브랜치 생성(기존 파일의 복제본을 생성)
	git branch 브랜치명 => 브랜치명은 본인 이니셜로

2. 생성한 개인 브랜치로 이동
	git checkout 이동할 브랜치명

3. 코딩 

4. 코딩한 내용을 스테이징한다. 
	git add .

5. 커밋실행 (복원 시점을 만든다 == commit, 개인 브랜치에서 코딩할 때를 가정한다)
	git commit -m 커밋메세지

		※ Git은 내려받기를 먼저하고 올릴것 중요 ※
6. 다른 팀원이 먼조 올린 파일이 있다면, 내려받고 다음 작업을 하는걸 추천. (계속 최신화 한다고 생각)
	git checkout main -> git pull origin main
		※ 위의 명령어 실행 시 이상한 화면으로 이동 => :exit 엔터

7. 본인의 브랜치에서 작업한 내용을 main 브랜치로 병합
 7-1) main 브랜치로 이동
 7-2) git merge 병합할 브랜치명

8. 이상이 없으면, main 브랜치를 push (팀원에게 공유)한다.
	git push origin main

9. 다음 작업을 하기 위해 개인 브랜치로 이동

10. 다른 팀원들이 공유한 내용을 받아 개인 브랜치에 받아 최신화 시킨다.
	git merge main

11. 최신화된 개인브랜치를 공유한다.
	git push origin 개인브랜치명

12. 3 ~ 11번까지 반복



